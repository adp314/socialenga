// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql, mysql or sqlserver, uncomment the @db.Text annotations in model Account below
    // Further reading:
    // https://next-auth.js.org/adapters/prisma#create-the-prisma-schema
    // https://www.prisma.io/docs/reference/api-reference/prisma-schema-reference#string
    url      = env("DATABASE_URL")
}

model Example {
    id        String   @id @default(cuid())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Necessary for Next auth
model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
    board         Board?
}

model Board {
    id                String    @id @default(cuid())
    holderId          String    @unique
    name              String?   @unique
    certified         Boolean   @default(false)
    image             String    @default("https://cdn.discordapp.com/avatars/853576062172135425/e81017f8e9459c05d913fbad1a4abf25.png")
    banner            String    @default("https://cdn.pixabay.com/photo/2020/06/02/09/39/banner-5250179_960_720.jpg")
    twitter           String?
    facebook          String?
    instagram         String?
    tiktok            String?
    twitch            String?
    youtube           String?
    startCampaignDate DateTime?
    endCampaignDate   DateTime?
    rewards           Rewards[]

    boardHolder User @relation(fields: [holderId], references: [id])
}

model Rewards {
    id          String   @id @default(cuid())
    boardId     String
    tier        Int
    points      Int
    description String
    createdAt   DateTime @default(now())
    board       Board    @relation(references: [id], fields: [boardId])
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}
